package com.victor.util;import android.content.Context;import android.util.Log;import com.victor.data.EpgData;import com.victor.data.EpgInfo;import com.victor.module.DataObservable;import org.jsoup.Jsoup;import org.jsoup.nodes.Document;import org.jsoup.select.Elements;import java.io.IOException;import java.net.SocketTimeoutException;import java.util.ArrayList;import java.util.HashMap;import java.util.List;/** * Created by victor on 2016/1/21. */public class HttpActions {    private static String TAG = "HttpActions";    public static void requestLiveEpgAction (Context context,String url){        Log.e(TAG,"requestLiveEpgAction()......url = " + url);        int status = 0;        EpgData epgData = new EpgData();        if (HttpUtil.isNetEnable(context)){            try {                Document document = Jsoup.connect(url)                        .userAgent("Mozilla/5.0 (Windows NT 5.1; zh-CN) AppleWebKit/535.12 (KHTML, like Gecko) Chrome/22.0.1229.79 Safari/535.12")                        .timeout(10000).get();                HashMap<String,String> epgMap = new HashMap<>();//                Elements liElements = document.getElementsByClass("li");                Elements liElements = document.getElementsByAttribute("data-name");                if (liElements.size() > 0) {                    List<EpgInfo> epgInfos = new ArrayList<>();                    for (int i = 0; i < liElements.size(); i++) {                        String[] epgs = liElements.get(i).text().split(" ");                        epgMap.put(epgs[0],epgs[1]);                        EpgInfo info = new EpgInfo();                        info.epg = epgs[1];                        Loger.e(TAG,"info.epg = " + info.epg);                        if (i < liElements.size() - 1) {                            info.startTime = liElements.get(i).text().split(" ")[0];                            info.endTime = liElements.get(i + 1).text().split(" ")[0];                        } else {                            if (i == liElements.size() - 1) {                                info.startTime = liElements.get(i).text().split(" ")[0];                                info.endTime = "00:00";                            }                        }                        epgInfos.add(info);                    }                    status = Constant.Msg.REQUEST_SUCCESS;                    epgData.epgInfos = epgInfos;                } else {                    status = Constant.Msg.REQUEST_SUCCESS_NO_DATA;                }            } catch (SocketTimeoutException e) {                e.printStackTrace();                status = Constant.Msg.SOCKET_TIME_OUT;            } catch (IOException e) {                e.printStackTrace();            }        } else {            status = Constant.Msg.NETWORK_ERROR;        }        epgData.status = status;        DataObservable.getInstance().setData(epgData);    }}