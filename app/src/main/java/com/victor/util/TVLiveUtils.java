package com.victor.util;import java.util.ArrayList;import android.content.Context;import android.graphics.Rect;import android.util.Base64;import android.util.DisplayMetrics;import android.view.SurfaceView;import android.view.ViewGroup;import android.view.WindowManager;public class TVLiveUtils {	/**	 * @param context	 * @param surfaceView	 * @param screenScale 画面显示比例	 */	public static void setScreenScales(Context context, SurfaceView surfaceView, int screenScale) {		if (surfaceView.getWindowToken() == null) {			return;		}		WindowManager manager = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);		DisplayMetrics dm = new DisplayMetrics();		manager.getDefaultDisplay().getMetrics(dm);		int mWidth = dm.widthPixels;		int mHeight = dm.heightPixels;		Rect localRect = new Rect();		surfaceView.getWindowVisibleDisplayFrame(localRect);		int i1 = localRect.bottom;		int i2 = localRect.top;		double d1 = i1 - i2;		int i3 = localRect.right;		int i4 = localRect.left;		double d2 = i3 - i4;		if (d1 <= 0.0D)			return;		if (d2 <= 0.0D)			return;		int mVideoHeight = surfaceView.getHeight();		int mVideoWidth = surfaceView.getHeight();		if (mVideoHeight <= 0.0D)			return;		if (mVideoWidth <= 0.0D)			return;		ViewGroup.LayoutParams localLayoutParams =  surfaceView.getLayoutParams();		switch (screenScale) {		//原始		case Constant.ScreenScale.SCALE_ORIGINAL:			double d3 = d2 / d1;			int i6 = mVideoWidth;			int i7 = mVideoHeight;			double d4 = i6 / i7;			if (d3 < d4){				int i24 = (int) d2;				localLayoutParams.width = i24;				double d7 = mVideoHeight * d2;				double d8 = mVideoWidth;				int i25 = (int) (d7 / d8);				localLayoutParams.height = i25;			}else{				int i8 = (int) d1;				localLayoutParams.height = i8;				double d5 = mVideoWidth * d1;				double d6 = mVideoHeight;				int i9 = (int) (d5 / d6);				localLayoutParams.width = i9;			}			surfaceView.setLayoutParams(localLayoutParams);			return;			//4:3		case Constant.ScreenScale.SCALE_4_3:			if (d2 / d1 >= 1.333333333333333D) {				int i12 = (int) d1;				localLayoutParams.height = i12;				int i13 = (int) (4.0D * d1 / 3.0D);				localLayoutParams.width = i13;			}else{				int i16 = (int) d2;				localLayoutParams.width = i16;				int i17 = (int) (3.0D * d2 / 4.0D);				localLayoutParams.height = i17;			}			surfaceView.setLayoutParams(localLayoutParams);			return;			//16：9		case Constant.ScreenScale.SCALE_16_9:			if (d2 / d1 >= 1.777777777777778D) {			int i18 = (int) d1;			localLayoutParams.height = i18;			int i19 = (int) (16.0D * d1 / 9.0D);			localLayoutParams.width = i19;		}else{			int i22 = (int) d2;			localLayoutParams.width = i22;			int i23 = (int) (9.0D * d2 / 16.0D);			localLayoutParams.height = i23;		}			surfaceView.setLayoutParams(localLayoutParams);			return;			//全屏		case Constant.ScreenScale.SCALE_FULLSCREEN:			int i24 = (int) d2;			localLayoutParams.width = i24;			localLayoutParams.height = mHeight+120;			surfaceView.setLayoutParams(localLayoutParams);			return;		default:			int i25 = (int) d2;			localLayoutParams.width = i25;			localLayoutParams.height = mHeight+120;			surfaceView.setLayoutParams(localLayoutParams);			return;		}	}}