package com.victor.util;import android.util.Log;import java.text.SimpleDateFormat;import java.util.Calendar;import java.util.Date;import java.util.Locale;/** * Created by victor on 2016/1/22. */public class DateUtil {    private static String TAG = "DateUtil";    /**     * 获取明天的日期     * @return     */    public static String getDateOfTomorrow() {        Date date=new Date();        Calendar calendar = Calendar.getInstance();        calendar.setTime(date);        calendar.add(calendar.DATE,+1);//把日期往后增加一天，整数往后推，负数往前移动        date=calendar.getTime();        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");        String dateString = formatter.format(date);        Log.e(TAG, "getDateOfTomorrow-dateString = " + dateString);        return dateString;    }    /**     * 获取昨天的日期     * @return     */    public static String getDateOfYesterday() {        Date date=new Date();        Calendar calendar = Calendar.getInstance();        calendar.setTime(date);        calendar.add(calendar.DATE,-1);        date=calendar.getTime();        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");        String dateString = formatter.format(date);        Log.e(TAG, "getDateOfYesterday-dateString = " + dateString);        return dateString;    }    /**     * 获取今天的日期     * @return     */    public static String getToday() {        Date date = new Date();        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");        String today = formatter.format(date);        Log.e(TAG, "getDateOfToday-today = " + today);        return today;    }    /**     * 获取今天的日期时间     * @return     */    public static String getTodayTime() {        Date date = new Date();        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");        String today = formatter.format(date);        Log.e(TAG, "getDateOfToday-today = " + today);        return today;    }    /**     * 获取本周星期一的日期     * @return     */    public static String getThisWeekMonday() {        Date date=new Date();        Calendar calendar = Calendar.getInstance();        calendar.setTime(date);        calendar.set(calendar.DAY_OF_WEEK,Calendar.MONDAY);        date=calendar.getTime();        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");        String dateString = formatter.format(date);        Log.e(TAG, "getThisWeekMonday-dateString = " + dateString);        return dateString;    }    /**     * 获取上周星期一的日期     * @return     */    public static String getLastWeekMonday(){        Calendar calendar = Calendar.getInstance(Locale.CHINA);        calendar.setFirstDayOfWeek(Calendar.MONDAY);        calendar.add(Calendar.WEEK_OF_MONTH,-1);        calendar.set(Calendar.DAY_OF_WEEK, Calendar.MONDAY);        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");        String dateString = formatter.format(calendar.getTime());        Log.e(TAG, "getLastWeekMonday-dateString = " + dateString);        return dateString;    }    /**     * 获取上周星期日的日期     * @return     */    public static String getLastWeekSunday(){        Calendar calendar = Calendar.getInstance(Locale.CHINA);        calendar.setFirstDayOfWeek(Calendar.MONDAY);        calendar.add(Calendar.WEEK_OF_MONTH,-1);        calendar.set(Calendar.DAY_OF_WEEK, Calendar.SUNDAY);        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");        String dateString = formatter.format(calendar.getTime());        Log.e(TAG, "getLastWeekSunday-dateString = " + dateString);        return dateString;    }    /**     * 获取本月第一天日期     * @return     */    public static String getThisMonthFirst(){        Calendar calendar = Calendar.getInstance(Locale.CHINA);        calendar.add(Calendar.MONTH, 0);        calendar.set(Calendar.DAY_OF_MONTH,1);        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");        String dateString = formatter.format(calendar.getTime());        Log.e(TAG, "getThisMonthFirst-dateString = " + dateString);        return dateString;    }    public static String getCurrentTime() {        Date date = new Date();        SimpleDateFormat formatter = new SimpleDateFormat("HH:mm");        String currentTime = formatter.format(date);//        Log.e(TAG, "getCurrentTime-currentTime = " + currentTime);        return currentTime;    }    /**     * 将长时间格式字符串转换为字符串 HH:mm:ss     *     * @param ms     * @return String     */    public static String formatTime(long ms) {        long time = ms / 1000;        int minute = (int) time / 60;        int hour = (int) minute / 60;        int second = (int) time % 60;        minute %= 60;        return String.format("%02d:%02d:%02d", hour, minute, second);    }}