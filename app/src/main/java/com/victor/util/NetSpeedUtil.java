package com.victor.util;import java.text.NumberFormat;import android.net.TrafficStats;public class NetSpeedUtil {    private static long preRxBytes,preSeBytes;    private static long rxBytes,seBytes;    /**     * 获取网络的时时网速，使用方法是：     * 每隔一段时间读取一次总流量，然后用本次和前一次的差除以间隔时间来获取平均速度，再换算为 K/s M/s     * 等单位，显示即可。     *     * @return 实时的网速（单位byte）     */    public static String calculateNetSpeed() {        String speed = "";        rxBytes = TrafficStats.getTotalRxBytes();        seBytes = TrafficStats.getTotalTxBytes()-rxBytes;        double downloadSpeed = (rxBytes-preRxBytes)/2;        double uploadSpeed = (seBytes-preSeBytes)/2;        preRxBytes = rxBytes;        preSeBytes = seBytes;        //根据范围决定显示单位        String upSpeed=null;        String downSpeed=null;        NumberFormat df = NumberFormat.getNumberInstance();        df.setMaximumFractionDigits(2);        if (downloadSpeed > 1024*1024){            downloadSpeed /= (1024*1024);            downSpeed=df.format(downloadSpeed)+"MB/s";        } else if (downloadSpeed > 1024){            downloadSpeed /= (1024);            downSpeed = df.format(downloadSpeed)+"KB/s";        } else {            downSpeed = df.format(downloadSpeed)+"B/s";        }        if (uploadSpeed>1024*1024) {            uploadSpeed /= (1024*1024);            upSpeed = df.format(uploadSpeed)+"MB/s";        } else if (uploadSpeed>1024) {            uploadSpeed /= (1024);            upSpeed = df.format(uploadSpeed)+"KB/s";        } else {            upSpeed = df.format(uploadSpeed)+"B/s";        }//        speed = "↓ "+downSpeed + "↑ "+upSpeed;        speed = downSpeed;        return speed;    }}