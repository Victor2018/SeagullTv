package com.victor.util;import android.content.Intent;import android.graphics.Bitmap;import android.graphics.Canvas;import android.graphics.Paint;import android.graphics.PixelFormat;import android.graphics.drawable.Drawable;import android.net.Uri;import android.provider.MediaStore;import android.view.View;import com.victor.app.App;import java.io.File;import java.io.FileNotFoundException;import java.io.FileOutputStream;/** * bitmap处理工具类 */public class BitmapUtil {    public static Bitmap drawableToBitmap(Drawable drawable) {        Bitmap bitmap = Bitmap.createBitmap(                drawable.getIntrinsicWidth(),                drawable.getIntrinsicHeight(),                drawable.getOpacity() != PixelFormat.OPAQUE ? Bitmap.Config.ARGB_8888                        : Bitmap.Config.RGB_565);        Canvas canvas = new Canvas(bitmap);        //canvas.setBitmap(bitmap);        drawable.setBounds(0, 0, drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight());        drawable.draw(canvas);        return bitmap;    }    public static boolean saveBitmap(Bitmap bitmap, String dir, String name, boolean isShowPhotos) {        File path = new File(dir);        if (!path.exists()) {            path.mkdirs();        }        File file = new File(path + "/" + name);        if (file.exists()) {            file.delete();        }        if (!file.exists()) {            try {                file.createNewFile();            } catch (Exception e) {                e.printStackTrace();                return false;            }        } else {            return true;        }        FileOutputStream fileOutputStream = null;        try {            fileOutputStream = new FileOutputStream(file);            bitmap.compress(Bitmap.CompressFormat.PNG, 100,                    fileOutputStream);            fileOutputStream.flush();        } catch (Exception e) {            e.printStackTrace();            return false;        } finally {            try {                fileOutputStream.close();            } catch (Exception e) {                e.printStackTrace();            }        }        // 其次把文件插入到系统图库        if (isShowPhotos) {            try {                MediaStore.Images.Media.insertImage( App.getContext().getContentResolver(),                        file.getAbsolutePath(), name, null);            } catch (FileNotFoundException e) {                e.printStackTrace();            }            // 最后通知图库更新            App.getContext().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse("file://" + file)));        }        return true;    }    public static Bitmap getBlurBitMap (Bitmap bm,View view) {        int radius = 25;        float scaleFactor = 8;        Bitmap overlay = Bitmap.createBitmap((int)(view.getMeasuredWidth()/scaleFactor), (int)(view.getMeasuredHeight()/scaleFactor), Bitmap.Config.ARGB_8888);        Canvas canvas = new Canvas(overlay);        canvas.translate(-view.getLeft()/scaleFactor, -view.getTop()/scaleFactor);        canvas.scale(1 / scaleFactor, 1 / scaleFactor);        Paint paint = new Paint();        paint.setFlags(Paint.FILTER_BITMAP_FLAG);        canvas.drawBitmap(bm, 0, 0, paint);        return overlay;    }}